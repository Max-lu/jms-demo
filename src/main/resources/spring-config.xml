<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

       <context:component-scan base-package="spring" />

       <!-- Spring提供的JMS工具类，它可以进行消息发送、接收等 -->
       <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
              <!-- 这个connectionFactory对应的是我们定义的Spring提供的那个ConnectionFactory对象 -->
              <property name="connectionFactory" ref="connectionFactory"/>
       </bean>

       <!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供-->
       <bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
              <property name="brokerURL" value="tcp://localhost:61616"/>
       </bean>

       <!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
       <bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">
              <!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
              <property name="targetConnectionFactory" ref="targetConnectionFactory"/>
       </bean>

       <!--<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">-->
              <!--<property name="brokerURL" value="tcp://localhost:61616"/>-->
       <!--</bean>-->

       <!--<bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">-->
              <!--<property name="connectionFactory" ref="targetConnectionFactory"/>-->
              <!--<property name="maxConnections" value="10"/>-->
       <!--</bean>-->

       <!--<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory">-->
              <!--<property name="targetConnectionFactory" ref="pooledConnectionFactory"/>-->
       <!--</bean>-->

       <!--这个是队列目的地-->
       <bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
              <constructor-arg value="queue"/>
       </bean>
       <!-- 消息监听器 -->
       <bean id="consumerMessageListener" class="spring.ConsumerMessageListener"/>
       <!-- 消息监听容器 -->
       <bean id="jmsContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
              <property name="connectionFactory" ref="connectionFactory" />
              <property name="destination" ref="queueDestination" />
              <property name="messageListener" ref="consumerMessageListener" />
       </bean>


       <!--这个是sessionAwareQueue目的地-->
       <bean id="sessionAwareQueue" class="org.apache.activemq.command.ActiveMQQueue">
              <constructor-arg value="sessionAwareQueue"/>
       </bean>
       <!-- 可以获取session的MessageListener -->
       <bean id="consumerSessionAwareMessageListener" class="spring.ConsumerSessionAwareMessageListener">
              <property name="destination" ref="sessionAwareQueue"/>
       </bean>
       <bean id="sessionAwareListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
              <property name="connectionFactory" ref="connectionFactory" />
              <property name="destination" ref="sessionAwareQueue" />
              <property name="messageListener" ref="consumerSessionAwareMessageListener" />
       </bean>


       <bean id="adapterQueue" class="org.apache.activemq.command.ActiveMQQueue">
              <constructor-arg value="adapterQueue"/>
       </bean>
       <!-- 消息监听适配器 -->
       <bean id="messageListenerAdapter" class="org.springframework.jms.listener.adapter.MessageListenerAdapter">
              <property name="delegate">
                     <bean class="spring.ConsumerListener"/>
              </property>
              <property name="defaultListenerMethod" value="receiveMessage"/>
       </bean>
       <!-- 消息监听适配器对应的监听容器 -->
       <bean id="messageListenerAdapterContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
              <property name="connectionFactory" ref="connectionFactory"/>
              <property name="destination" ref="adapterQueue"/>
              <property name="messageListener" ref="messageListenerAdapter"/><!-- 使用MessageListenerAdapter来作为消息监听器 -->
       </bean>

</beans>